{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","store/actions/postActions.js","components/posts/Post.js","components/dashboard/Pagination.js","components/dashboard/Dashboard.js","components/posts/AddComment.js","components/posts/Comment.js","components/layout/alert.js","components/posts/PostDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/posts/CreatePost.js","components/posts/UpdatePost.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postsReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","signOut","dispatch","getState","_ref2","getFirebase","auth","then","type","props","profile","react_default","a","createElement","className","NavLink","to","onClick","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","addComment","postId","comment","_ref5","getFirestore","firestore","user","currentUser","console","log","userId","doc","collection","add","Object","objectSpread","authorFirstName","firstName","createdAt","Date","now","storeComments","_ref6","get","snapshot","comments","forEach","data","push","id","sort","b","getTime","payload","Post","_ref","post","concat","title","authorLastName","moment","calendar","Pagination","pageNumbers","currentPage","handlePaginationClick","handlePrevNextClick","lastPage","_","last","start","end","length","Number","pages","slice","prevBtnClassName","nextBtnClassName","e","map","number","key","Dashboard","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","postsPerPage","newProps","parsed","queryString","parse","location","search","page","undefined","setState","storePosts","target","history","_this$state","storedPosts","endIndex","startIndex","postsToShow","posts_Post","_this$props","posts","Redirect","i","Math","ceil","renderPosts","dashboard_Pagination","bind","Component","compose","ordered","_ref4","catch","error","firestoreConnect","orderBy","AddComment","_Component","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","handleSubmit","preventDefault","handleChange","value","inherits","createClass","enabled","onSubmit","onChange","disabled","Comment","showAlert","message","Alert","success","position","effect","timeout","PostDetails","posts_Comment","authorId","onDeletePost","deletePost","_this$props2","match","params","content","renderButtons","posts_AddComment","renderComments","ownProps","delete","SignIn","email","password","authError","signIn","defineProperty","_this$state2","test","_this$state3","htmlFor","signInValidation","credentials","signInWithEmailAndPassword","SignUp","lastName","signUp","signUpValidation","newUser","_ref3","createUserWithEmailAndPassword","response","set","CreatePost","createPost","createValidation","UpdatePost","updatePost","updateValidation","update","App","BrowserRouter","layout_Navbar","Switch","Route","path","component","exact","react_s_alert_default","stack","limit","Boolean","window","hostname","initState","authReducer","action","postError","postsReducer","array","rootReducer","combineReducers","firestoreReducer","firebaseReducer","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75c048fe.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  const {profile} = props\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Post</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating orange lighten-2\">\n          {profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\n\nexport default connect(\n  null,\n  { signOut }\n)(SignedInLinks);\n","//  import { database } from \"../../config/firebaseConfig\";\n\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const SIGNOUT = \"SIGNOUT\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\n\nexport const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    console.log(firebase)\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: LOGIN_SUCCESS });\n      })\n      .catch(error => {\n        dispatch({ type: LOGIN_ERROR, error });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: SIGNOUT });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(response => {\n        return firestore\n          .collection(\"users\")\n          .doc(response.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: SIGNUP_SUCCESS });\n      })\n      .catch(error => {\n        dispatch({ type: SIGNUP_ERROR, error });\n      });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n      <li>\n       \n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n  return (\n    <nav className=\"nav-wrapper grey lighten-1\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          SimpleCommunity\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\nconst mapStateToProps = state => {\n  //  console.log(state);\n\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","\nexport const CREATE_POST = \"CREATE_POST\";\nexport const CREATE_POST_ERROR = \"CREATE_POST_ERROR\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const STORE_POSTS_SUCCESS = \"STORE_POSTS_SUCCESS\";\nexport const STORE_POSTS_ERROR = \"STORE_POSTS_ERROR\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const STORE_COMMENTS_SUCCESS = \"STORE_COMMENTS_SUCCESS\";\n\nexport const createPost = post => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"posts\")\n      .add({\n        ...post,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: Date.now()\n      })\n      .then(() => {\n        dispatch({ type: CREATE_POST });\n      })\n      .catch(error => {\n        dispatch({ type: CREATE_POST_ERROR, error });\n      });\n  };\n};\n\nexport const deletePost = id => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n\n    firestore\n      .collection(\"posts\")\n      .doc(id)\n      .delete()\n      .then(() => {\n        dispatch({ type: DELETE_POST, id });\n      });\n  };\n};\n\nexport const updatePost = (id, post) => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firestore\n      .collection(\"posts\")\n      .doc(id)\n      .update(post)\n      .then(() => {\n        dispatch({ type: UPDATE_POST });\n      });\n  };\n};\n\nexport const storePosts = () => {\n  return (dispatch, getState, { getFirestore }) => {\n    console.log(\"storePosts has run\");\n    //  console.log(database.ref(\"posts\"));\n    const firestore = getFirestore();\n\n    firestore\n      .collection(\"posts\")\n      .get()\n      .then(snapshot => {\n        //  console.log(snapshot);\n        dispatch({ type: STORE_POSTS_SUCCESS, payload: snapshot });\n      })\n      .catch(error => {\n        dispatch({ type: STORE_POSTS_ERROR, error });\n      });\n  };\n};\n\nexport const addComment = (postId, comment) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const user = firebase.auth().currentUser;\n    console.log(user.uid);\n    const userId = user.uid;\n    const ref = firestore.doc(\"posts/\" + postId);\n    const subcollection = ref.collection(\"comments\");\n\n    subcollection.add({\n      ...comment,\n      postId: postId,\n      uid: userId,\n      authorFirstName: profile.firstName,\n      createdAt: Date.now()\n    });\n\n    dispatch(storeComments(postId));\n  };\n};\n\nexport const storeComments = postId => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    const commentsRef = firestore.collection('posts').doc(postId).collection('comments')\n    \n    commentsRef.get().then(snapshot => {\n      const comments = [];\n      snapshot.forEach(doc => {\n        console.log(doc.data());\n\n        comments.push({\n          id: doc.id,\n          postId: doc.data().postId,\n          uid: doc.data().userId,\n          comment: doc.data().comment,\n          authorFirstName: doc.data().authorFirstName,\n          createdAt: doc.data().createdAt\n        });\n      });\n\n      comments.sort((a, b) => {\n        return (\n          new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n        );\n      });\n      console.log(comments);\n      dispatch({ type: STORE_COMMENTS_SUCCESS, payload: comments });\n    });\n    \n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\n\nconst Post = ({ post }) => {\n  //  console.log(post);\n  //  console.log(post.id);\n  console.log(post);\n  return (\n    <li className=\"collection-item row\">\n      <Link to={`/post/${post.id}`}>\n        <h6>\n          <strong>{post.title}</strong>\n        </h6>\n        <ul>\n          <li>\n            <span className=\"black-text\">\n              written by {post.authorFirstName} {post.authorLastName}\n            </span>\n          </li>\n          <li>\n            <span className=\"grey-text\">\n              {moment(post.createdAt).calendar()}\n            </span>\n          </li>\n        </ul>\n      </Link>\n    </li>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nconst Pagination = props => {\n  const {\n    pageNumbers,\n    currentPage,\n    handlePaginationClick,\n    handlePrevNextClick\n  } = props;\n\n  const lastPage = _.last(pageNumbers);\n  let start = 1,\n    end = lastPage;\n\n  //  3 or less pages\n  if (pageNumbers.length < 4) {\n    start = 1;\n    end = lastPage;\n  }\n  //  current page is 1\n  else if (currentPage == 1) {\n    start = 1;\n    end = 3;\n  }\n  //  current page is 2\n  else if (currentPage == 2) {\n    start = 1;\n    end = 4;\n  }\n\n  //  current page is the second to last page\n  else if (lastPage - currentPage == 1) {\n    start = lastPage - 3;\n    end = lastPage;\n  }\n\n  //  current page is the last page\n  else if (lastPage == currentPage) {\n    start = lastPage - 2;\n    end = lastPage;\n  } else {\n    start = currentPage - 2;\n    end = Number(currentPage) + 2;\n  }\n  //  get only the page numbers that need to be displayed\n  const pages = _.slice(pageNumbers, start - 1, end);\n  const prevBtnClassName =\n    currentPage == 1 ? \"waves-effect disabled\" : \"waves-effect\";\n  const nextBtnClassName =\n    currentPage == lastPage ? \"waves-effect disabled\" : \"waves-effect\";\n\n  return (\n    <ul className=\"pagination\">\n      <li className={prevBtnClassName}>\n        <a\n          className=\"page-link\"\n          //  aria-label=\"Previous\"\n          id=\"prev\"\n          onClick={e => handlePrevNextClick(e, pages, currentPage)}\n        >\n          &lsaquo;\n        </a>\n      </li>\n      {pages.map(number => {\n        return (\n          <li\n            className={\n              number == currentPage ? \"waves-effect active\" : \"waves-effect\"\n            }\n            key={number}\n          >\n            <a\n              className=\"page-link\"\n              id={number}\n              onClick={handlePaginationClick}\n            >\n              {number}\n            </a>\n          </li>\n        );\n      })}\n      <li className={nextBtnClassName}>\n        <a\n          className=\"page-link\"\n          id=\"next\"\n          onClick={e => handlePrevNextClick(e, pages, currentPage)}\n        >\n          &rsaquo;\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport { storePosts } from \"../../store/actions/postActions\";\nimport Post from \"../posts/Post\";\nimport Pagination from \"./Pagination\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n      postsPerPage: 4\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    // parse query string and set currenPage state accordingly\n    const parsed = queryString.parse(newProps.location.search).page;\n    if (parsed !== undefined) this.setState({ currentPage: parsed });\n    else {\n      this.setState({ currentPage: 1 });\n    }\n  }\n\n  componentWillMount() {\n    this.props.storePosts();\n  }\n\n  handlePaginationClick(e) {\n    this.setState({ currentPage: e.target.id });\n    this.props.history.push(`/post?page=${e.target.id}`);\n  }\n\n  handlePrevNextClick(e, pageNumbers, currentPage) {\n    const lastPage = _.last(pageNumbers);\n\n    //  when Prev button pressed\n    if (currentPage > 1 && e.target.id === \"prev\") {\n      let page = currentPage - 1;\n      this.setState({ currentPage: page });\n      this.props.history.push(`/post?page=${page}`);\n    }\n    //  when Next button pressed\n    else if (currentPage < lastPage && e.target.id === \"next\") {\n      let page = Number(currentPage) + 1;\n      this.setState({ currentPage: page });\n      this.props.history.push(`/post?page=${page}`);\n    }\n  }\n  renderPosts() {\n    const { currentPage, postsPerPage } = this.state;\n    const { storedPosts } = this.props;\n    const endIndex = currentPage * postsPerPage;\n    //  console.log(endIndex);\n    const startIndex = endIndex - postsPerPage;\n    //  console.log(startIndex);\n    const postsToShow = _.slice(storedPosts, startIndex, endIndex);\n    //  console.log(postsToShow);\n    //  console.log(this.props.storedPosts);\n    return _.map(postsToShow, (post, key) => {\n      //  console.log(key)\n      console.log(post);\n      return <Post key={key} post={post} />;\n    });\n  }\n\n  render() {\n    const { posts, auth, storedPosts } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    //  console.log(Array.isArray(storedPosts));\n    //  console.log(storedPosts.length);\n\n    // creating page numbers like [1][2][3] at the bottom of the layout\n    const pageNumbers = [];\n    for (\n      let i = 1;\n      i <= Math.ceil(storedPosts.length / this.state.postsPerPage);\n      i++\n    ) {\n      pageNumbers.push(i);\n    }\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"post-list section\">\n              <ul className=\"collection col s12\">{this.renderPosts()}</ul>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <Pagination\n            className=\"pagiantion\"\n            currentPage={this.state.currentPage}\n            pageNumbers={pageNumbers}\n            handlePrevNextClick={this.handlePrevNextClick.bind(this)}\n            handlePaginationClick={this.handlePaginationClick.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  //  console.log(posts);\n  return {\n    posts: state.firestore.ordered.posts,\n    auth: state.firebase.auth,\n    storedPosts: state.posts.posts\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    { storePosts }\n  ),\n  firestoreConnect([\n    {\n      collection: \"posts\",\n      orderBy: [\"createdAt\", \"desc\"]\n    }\n  ])\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../store/actions/postActions\";\nexport class AddComment extends Component {\n  state = {\n    comment: \"\"\n  };\n\n  handleSubmit = e => {\n    const { auth, postId } = this.props;\n    e.preventDefault();\n    console.log(this.state);\n    console.log(postId);\n    this.props.addComment(postId, this.state);\n  };\n\n  handleChange = e => {\n    this.setState({\n      comment: e.target.value\n    });\n  };\n\n  render() {\n    const { comment } = this.state;\n    const enabled = comment.length > 0;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"input-field\">\n            <textarea\n              id=\"comment\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <button\n            className=\"btn orange lighten-2 z-depth-o\"\n            disabled={!enabled}\n          >\n            Comment\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { addComment }\n)(AddComment);\n","import React from \"react\";\nimport moment from 'moment'\n\nconst Comment = ({comment}) => {\n  return (\n      <div className=\"card z-depth-1\" id=\"comment-box\">\n        <div className=\"card-content\">\n            <h6>{comment.comment} </h6>\n            <span className=\"grey-text\">by {comment.authorFirstName}</span>\n            <div className=\"grey-text\">{moment(comment.createdAt).calendar()}</div>\n        </div>\n      </div>\n  );\n};\n\nexport default Comment;\n","import Alert from \"react-s-alert\";\n\nexport const showAlert = message => {\n  Alert.success(message, {\n    position: \"top\",\n    effect: \"stackslide\",\n    timeout: 1500\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport {\n  deletePost,\n  addComment,\n  storeComments\n} from \"../../store/actions/postActions\";\nimport _ from \"lodash\";\nimport AddComment from \"./AddComment\";\nimport Comment from \"./Comment\";\nimport {showAlert} from '../layout/alert'\n\n\nclass PostDetails extends Component {\n  componentWillMount(){\n    const {postId} = this.props \n    this.props.storeComments(postId)\n  }\n  renderComments() {\n    const { postId, comments } = this.props;\n    console.log(comments);    \n    \n    return _.map(comments, (comment, key) => {\n      if(postId===comment.postId)\n      return (\n        <Comment postId={postId} key={key} comment={comment}>\n          {comment.comment}\n        </Comment>\n      );\n    });\n  }\n\n  renderButtons(post) {\n    if (this.props.auth.uid === post.authorId) {\n      return (\n        <div id=\"update-buttons\">\n          <button className=\"btn orange lighten-2 z-depth-o\">\n            <Link id=\"update-button\" to={\"/update/\" + this.props.postId} className=\"white-text\">\n              Update\n            </Link>\n          </button>\n          <button\n            onClick={this.onDeletePost.bind(this)}\n            //  onClick={this.onDeletePost.bind(this, post.id)}\n            className=\"btn orange lighten-2 z-depth-o\"\n          >\n            Delete\n          </button>\n        </div>\n      );\n    }\n  }\n\n  onDeletePost() {\n    this.props.deletePost(this.props.postId, () => {});\n    this.props.history.push(\"/\");\n    showAlert('Your post successfully deleted!')\n\n  }\n\n  render() {\n    const { post, auth, match, firebase } = this.props;\n    console.log(firebase);\n    console.log(match.params.id);\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    if (post) {\n      return (\n        <div className=\"container section post-details\">\n          <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n              <span className=\"card-title\">{post.title}</span>\n              <p>{post.content}</p>\n            </div>\n            <div className=\"card-action grey-text\">\n              <div>\n                Posted by {post.authorFirstName} {post.authorLastName}\n              </div>\n              <div> {moment(post.createdAt).calendar()}</div>\n            </div>\n            <div className=\"input-field\">{this.renderButtons(post)}</div>\n          </div>\n          <AddComment postId={match.params.id} />\n\n          <div id=\"comment-container\">{this.renderComments()}</div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"containor center\">\n          <p>It seems like, there is no post yet..</p>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const posts = state.firestore.data.posts;\n  const post = posts ? posts[id] : null;\n  return {\n    post: post,\n    auth: state.firebase.auth,\n    //  postArray: state.firestore.ordered.posts,\n    postId: id,\n    //  storedPost: state.post\n    firebase: state.firebase.ordered,\n    //  comments: state.posts.comments\n    posts: posts,\n    comments: state.posts.comments\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    { deletePost, addComment, storeComments }\n  ),\n  firestoreConnect([{ collection: \"posts\" }])\n)(PostDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  handleSubmit = e => {\n    const { authError } = this.props;\n    const { email, password } = this.state;\n    e.preventDefault();\n    //  console.log(this.state)\n    this.props.signIn(this.state);\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  signInValidation() {\n    console.log(\"update validation\");\n    const { email, password } = this.state;\n    if (!email || !password) {\n      return null;\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      return (\n        <div className=\"red-text center\">\n          <p>Invalid email address</p>\n        </div>\n      );\n    } else if (password.length <= 3) {\n      return (\n        <div className=\"red-text center\">\n          <p>Password must be at least 4 digits or characters</p>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { authError, auth } = this.props;\n    const { email, password } = this.state;\n    const enabled = email.length > 0 && password.length > 3;\n\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button\n              className=\"btn orange lighten-2 z-depth-o\"\n              disabled={!enabled}\n            >\n              Login\n            </button>\n            {this.signInValidation()}\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { signIn }\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\nimport { showAlert } from \"../layout/alert\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    //  console.log(this.state);\n    this.props.signUp(this.state);\n    const { authError } = this.props;\n    const { email, password, firstName, lastName } = this.state;\n    if (email && password && firstName && lastName && !authError) {\n      showAlert(\"You have signed up successfully!\");\n    }\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  signUpValidation() {\n    console.log(\"update validation\");\n    const { email, password, firstName, lastName } = this.state;\n\n    if (!email || !password || !firstName || !lastName) {\n      return (\n        <div className=\"red-text center\">\n          <p>Please fill out the field(s)</p>\n        </div>\n      );\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      return (\n        <div className=\"red-text center\">\n          <p>Invalid email address</p>\n        </div>\n      );\n    } else if (password.length <= 3) {\n      return (\n        <div className=\"red-text center\">\n          <p>Password must be at least 4 digits or characters</p>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    const { email, password, firstName, lastName } = this.state;\n    const enabled =\n      email.length > 0 &&\n      password.length > 3 &&\n      firstName.length > 0 &&\n      lastName.length > 0;\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button\n              className=\"btn orange lighten-2 z-depth-o\"\n              disabled={!enabled}\n            >\n              Sign Up\n            </button>\n            {this.signUpValidation()}\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { signUp }\n)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createPost } from \"../../store/actions/postActions\";\nimport { Redirect } from \"react-router-dom\";\nimport {showAlert} from '../layout/alert'\n\nclass CreatePost extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n  \n  /* dummy data maker for test\n  componentWillMount() {\n    for (let i = 0; i < 200; i++) {\n      this.props.createPost(\n        this.setState({\n          title: \"created data\" + i,\n          content: \"created content\" + i\n        })\n      );\n    }\n  }\n*/\n\n  createValidation() {\n    console.log(\"update validation\");\n    console.log(this.state.title);\n    console.log(this.state.content);\n\n    if (this.state.title && this.state.content) {\n      return null;\n    } else {\n      return (\n        <div className=\"red-text center\">\n          <p>Please fill out the field(s)</p>\n        </div>\n      );\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.createPost(this.state);\n    this.props.history.push(\"/\");\n    showAlert('Your post successfully created!')\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  render() {\n    const { auth } = this.props;\n    const { title, content } = this.state;\n    const enabled = title.length > 0 && content.length > 0;\n\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create New Post</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"input-field\">\n            <button\n              className=\"btn orange lighten-2 z-depth-o\"\n              disabled={!enabled}\n            >\n              Create\n            </button>\n            {this.createValidation()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { createPost }\n)(CreatePost);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { updatePost } from \"../../store/actions/postActions\";\nimport {showAlert} from '../layout/alert'\n\nclass UpdatePost extends Component {\n  componentWillMount() {\n    console.log(this.props);\n    this.setState({\n      title: this.props.post.title,\n      content: this.props.post.content\n    });\n  }\n\n  updateValidation() {\n    console.log(\"update validation\");\n    console.log(this.state.title);\n    console.log(this.state.content);\n\n    if (this.state.title && this.state.content) {\n      return null;\n    } else {\n      return (\n        <div className=\"red-text center\">\n          <p>Please fill out the field(s)</p>\n        </div>\n      );\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.updatePost(this.props.postId, this.state);\n    /*\n    console.log(this.state.title);\n    console.log(this.state.content);\n    */\n    this.props.history.push(\"/\");\n    showAlert('Your post successfully updated!')\n\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  render() {\n    //  console.log(this.state);\n    const { auth } = this.props;\n    const { title, content } = this.state;\n    const enabled = title.length > 0 && content.length > 0;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Update Post</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              value={content}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"input-field\">\n            <button\n              className=\"btn orange lighten-2 z-depth-o\"\n              disabled={!enabled}\n            >\n              Update\n            </button>\n            {this.updateValidation()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const posts = state.firestore.data.posts;\n  const post = posts ? posts[id] : null;\n  //  console.log(post);\n  return {\n    auth: state.firebase.auth,\n    post: post,\n    postId: id\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    { updatePost }\n  ),\n  firestoreConnect([{ collection: \"posts\" }])\n)(UpdatePost);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport PostDetails from \"./components/posts/PostDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreatePost from \"./components/posts/CreatePost\";\nimport UpdatePost from \"./components/posts/UpdatePost\";\nimport Alert from \"react-s-alert\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport 'react-s-alert/dist/s-alert-css-effects/stackslide.css';\n\n/**\n *\n * The order in <Switch> is super important if a path has \"/post/:id\" places\n * below than \"/post\" or \"/\", then it will not work\n *\n */\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path=\"/post/:id\" component={PostDetails} />\n            <Route path=\"/post\" component={Dashboard} />\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signUp\" component={SignUp} />\n            <Route path=\"/create\" component={CreatePost} />\n            <Route path=\"/update/:id\" component={UpdatePost} />\n          </Switch>\n        <Alert stack={{ limit: 3 }} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOGIN_SUCCESS } from \"../actions/authActions\";\nimport { LOGIN_ERROR } from \"../actions/authActions\";\nimport { SIGNOUT } from \"../actions/authActions\";\nimport { SIGNUP_SUCCESS } from \"../actions/authActions\";\nimport { SIGNUP_ERROR } from \"../actions/authActions\";\n\nconst initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case LOGIN_ERROR:\n      console.log(\"login error :(\");\n      return {\n        ...state,\n        authError: \"Login error :(\"\n      };\n    case LOGIN_SUCCESS:\n      console.log(\"login success :D\");\n      return {\n        ...state,\n        authError: null\n      };\n    case SIGNOUT:\n      console.log(\"sign out bye~\");\n      return state;\n    case SIGNUP_SUCCESS:\n      console.log(\"sign up success welcome^^\");\n      return {\n        ...state,\n        authError: null\n      };\n    case SIGNUP_ERROR:\n      console.log(\"sign up error >.<\");\n      return {\n        ...state,\n        authError: action.error.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","//  import _ from \"lodash\";\n//  import moment from \"moment\";\n\nimport { CREATE_POST } from \"../actions/postActions\";\nimport { CREATE_POST_ERROR } from \"../actions/postActions\";\nimport { DELETE_POST } from \"../actions/postActions\";\nimport {\n  UPDATE_POST,\n  STORE_POSTS_SUCCESS,\n  STORE_POSTS_ERROR,\n  //  ADD_COMMENT_SUCCESS,\n  STORE_COMMENTS_SUCCESS\n} from \"../actions/postActions\";\n\nconst initState = {\n  posts: [],\n  postError: null,\n  comments: []\n};\n\nconst postsReducer = (state = initState, action) => {\n  switch (action.type) {\n    case CREATE_POST:\n      console.log(\"post created\", action.post);\n      console.log(action.post);\n      return state;\n    case CREATE_POST_ERROR:\n      console.log(\"error post created\", action.error);\n      return state;\n\n    case DELETE_POST:\n      return state;\n\n    case UPDATE_POST:\n      console.log(\"post updated\");\n      return state;\n\n    case STORE_POSTS_SUCCESS:\n      const snapshot = action.payload;\n      const array = [];\n      snapshot.forEach(doc => {\n        //  console.log(doc);\n        //  console.log(doc.id);\n        array.push({\n          id: doc.id,\n          authorId: doc.data().authorId,\n          authorFirstName: doc.data().authorFirstName,\n          authorLastName: doc.data().authorLastName,\n          title: doc.data().title,\n          content: doc.data().content,\n          createdAt: doc.data().createdAt\n        });\n      });\n\n      array.sort((a, b) => {\n        return (\n          new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n        );\n      });\n\n      console.log(array);\n      return {\n        ...state,\n        posts: array\n      };\n\n    case STORE_POSTS_ERROR:\n      return {\n        ...state,\n        postError: action.error.message\n      };\n    /*\n    case ADD_COMMENT_SUCCESS:\n      const commentSnapshot = action.payload;\n      const commentArray = [];\n      commentSnapshot.forEach(doc => {\n        console.log(doc.data());\n\n        commentArray.push({\n          id: doc.id,\n          postId: doc.data().postId,\n          uid: doc.data().userId,\n          comment: doc.data().comment,\n          createdAt: doc.data().createdAt\n        });\n      });\n\n      commentArray.sort((a, b) => {\n        return (\n          new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n        );\n      });\n      \n      console.log(commentArray);\n      return {\n        ...state,\n        comments: commentArray\n      };\n*/\n\n    case STORE_COMMENTS_SUCCESS:\n      return {\n        ...state,\n        comments: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport postsReducer from \"./postsReducer\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  \n  auth: authReducer,\n  posts: postsReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer  \n});\n\nexport default rootReducer;\n","import * as firebase from \"firebase\";\n\n/*\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport 'firebase/database'\n*/\n\nvar config = {\n  apiKey: \"AIzaSyDu0vpbB3ZCJookzmh7gIpf67f9Shxu1-Y\",\n  authDomain: \"simplecommunity-1fad0.firebaseapp.com\",\n  databaseURL: \"https://simplecommunity-1fad0.firebaseio.com\",\n  projectId: \"simplecommunity-1fad0\",\n  storageBucket: \"simplecommunity-1fad0.appspot.com\",\n  messagingSenderId: \"195346449472\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/firebaseConfig\";\n//  import './include/bootstrap'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebaseConfig),\n    reactReduxFirebase(firebaseConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}